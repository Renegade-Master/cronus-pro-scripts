/* **********************************************\
|                                                |
| GPC SCRIPT for preventing AFK from triggering. |
|                                                |
\* **********************************************/

int INT_MAX;
int MAX_AIM_TIME;
int NO_AIM_TIME;

int run_time;
int last_time;

int runAntiAfk;
int rand_num;
int aiming_time;
int currently_aiming;


/**
* Initialise Script
*/
init {
	INT_MAX = 32767;
	MAX_AIM_TIME = 3500;
	NO_AIM_TIME = 10000;
	run_time = 0;
	last_time = 0;

	runAntiAfk = FALSE;
	rand_num = 0;
	aiming_time = 0;
	currently_aiming = FALSE;
}


/**
* Main Loop
*/
main {
	// Update run_time
	last_time = run_time;
	run_time += get_rtime();

	set_val(TRACE_4, currently_aiming);

	// Request to turn ON the macro
	if (event_press(PS4_TRIANGLE) && event_press(PS4_SQUARE)) {
		runAntiAfk = TRUE;
	}

	// Request to turn OFF the macro
	if (event_press(PS4_CIRCLE) && event_press(PS4_CROSS)) {
		runAntiAfk = FALSE;
	}

	// If the macro should be ON
	if (runAntiAfk) {
		combo_run(ANTI_AFK);
	} else { // If the macro should be OFF
		combo_stop(ANTI_AFK);
	}

	// Sometimes aim and look around
	if ((random_number(0, 10) < 2) && !currently_aiming) {
		combo_run(AIM_AND_LOOK);
	}
}


/**
* Anti AFK Macro
*/
combo ANTI_AFK {
	// Walk forwards
	reset_movement();
	forwards();
	wait(7500);

	// Walk left
	reset_movement();
	left();
	wait(5000);

	// Walk forwards
	reset_movement();
	forwards();
	wait(7500);

	// Walk right
	reset_movement();
	right();
	wait(5000);
}


/**
* Aim and Look Macro
*/
combo AIM_AND_LOOK {
	currently_aiming = TRUE;
	aim_and_look();

	wait(MAX_AIM_TIME);

	currently_aiming = FALSE;
	reset_aim();

	wait(NO_AIM_TIME)
}

/****/

/**
* Walk left
*/
function left() {
	set_val(PS4_LX, -100);
}


/**
* Walk right
*/
function right() {
	set_val(PS4_LX, 100);
}


/**
* Walk forwards
*/
function forwards() {
	set_val(PS4_LY, -100);
}


/**
* Reset movement to stationary
*/
function reset_movement() {
	set_val(PS4_LX, 0);
	set_val(PS4_LY, 0);
}


/**
* Aim and look around
*/
function aim_and_look() {
	set_val(PS4_L2, 100);
	set_val(PS4_RX, 50);
}


/**
* Reset Aim and look around
*/
function reset_aim() {
	set_val(PS4_L2, 0);
	set_val(PS4_RX, 0);
}

/****/

/**
* Pseudo Random Number Generator
*/
function random_number(int low, int high) {
	rand_num = abs((last_time * run_time) / (INT_MAX / ((high - low) + 1) + 1));

	// Debug random number
	set_val(TRACE_6, rand_num);

	return rand_num;
}
